openapi: 3.0.3
info:
  title: Periode Api
  description: >
    The API for customers who want create their own UI, but still use Period as a payment machine.
    The poeple wanting to integrate with this API are called merchants in this text
    </br>
    </br>

    <b> Prerequisites: </b> 
    </br>
      1. Sign up at periode.no  https://periode.no/bli-kunde     </br>
      2. Merchant creates a product in periodes UI portal and receives their unique periode url for initiating a purchase.  (minside.periode.no/signup/{productId})
      </br>
        a. (Optional) Add a webhook url to the product so all payments and state changes are POSTED to your server 
        </br>
        </br>
      3. Retrieve your shared secret used in the x-api-key for all requests at the "instillinger" settings in merchant.periode.no

    <b>
     I will let Periode manage the UI for letting users signup and stop the agreement: (E.g. users can log into periode) </b>
    </br>

      3. Merchant creates a purchase flow and redirects minside.periode.no/{productId} .     </br>

         a. Without query params the customer will fill in requierd information in Periodes UI     </br>

         b. If the customer wants to own the UI the customer can be redirected with all requierd info as query params  </br>
      4. Customer is redirected to Vipps or Stripe for payment     </br>

      5. On success Periode sends a POST call to merchant defined endpoint.     </br>

      6. Merchant returns 200 OK, on which periode redirects the customer to the merchants site     </br>

      7. Optional. Merchant polls /subscriptions endpoint to ensure all charges are accounted for (in case of donwtime during webhook calls)     </br>

      8. End User can login to minside.periode.no to manage their subscription </br>

    <b>
    I have created my own UI and will only use the Periode API to initiate and stop subscriptions. 
    </b>
    </br>

      3. Merchant initiates a subscription by posting to /merchant/:merchantId/products/:productId/subscriptions

      4. Periode responds with a vipps payment url that the merchant will redirect  the user to

      5. After successfull payment the users is redirected back to us, we send a webhook to you and
      redirect the user to your site when you respond 200OK
      
    <b>
    <a href="https://github.com/ohmpay/ohmpay.github.io/blob/main/merchantApi.postman_collection.json">
    Postman Collection </a>
    </b>

    >

  version: 0.0.1
servers:
  - url: https://europe-west1-periode-prod.cloudfunctions.net/merchantApi
    description: The url of the merchant exposed part of periode
  - url: https://europe-west1-periode-test.cloudfunctions.net/merchantApi
    description: The url of the merchant exposed part of periode

paths:
  /minside.periode.no/merchants/{merchantId}/products:
    post:
      tags:
        - "Product"
      summary: Create a new product that can have multiple subscriptions

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createProductRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createProductResponse"
        "400":
          description: Bad request

    put:
      tags:
        - "Product"
      summary: update a product that can have multiple subs. The subscriptions will be updated with the new price
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          description: The id of the product
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateProductRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad request

  /minside.periode.no/signup/{productId}:
    get:
      tags:
        - "Subscription"
      summary: Get the signup page for the product
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true

          description: The unique id of this product
        - in: query
          name: merchant_customer_id
          schema:
            type: string
          description: The id you have for the customer in your system (deprecated, use tags instead)
        - in: query
          name: redirect_uri
          schema:
            type: string
          description: the uri you want the customer to redirect to after completed payment
        - in: query
          name: webhook_uri
          schema:
            type: string
          description: url encoded uri where you want to receive the backend to backend webhook on subscription state changes
        - in: query
          name: email
          schema:
            type: string
          description: The email you have for the customer in your system
        - in: query
          name: radio_button_index
          schema:
            type: integer
          description: The index of the checked radio button, where 0 is the first
        - in: query
          name: checkbox_indexes
          schema:
            type: string
          description: The indexes of the checked checboxes, separatet by comma
        - in: query
          name: payment_method_type
          schema:
            type: string
            enum: [VIPPS, STRIPE]
          description: The payment method to use
        - in: query
          name: auto_submit
          schema:
            type: boolean
          description: Whether periode should redirect the customer directly to stripe/vipps for payments
        - in: query
          name: tag_*
          schema:
            type: string
          description: Any number of custom tags you want to have on the subscription on the form tag_name=value

      responses:
        "200":
          description: Successful response

  /merchants/{merchantId}/products/{productId}/subscriptions/:
    get:
      tags:
        - "Subscription"
      summary: Get all subscriptions for this merchant
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the merchant
          required: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/subscription"

  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}:
    get:
      tags:
        - "Subscription"
      summary: Get a single subscription by id
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/subscription"

  /merchants/{merchantId}/products/{productId}/subscriptions:
    post:
      tags:
        - "Subscription"
      summary: Create a draft subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createSubscription"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createSubscriptionResponse"

  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}/update:
    put:
      tags:
        - "Subscription"
      summary: Update subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/updateSubscription"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateSubscriptionResponse"

  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}/stop:
    put:
      tags:
        - "Subscription"
      summary: stop subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stopSubscriptionResponse"
  
  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}/reactivate:
    put:
      tags:
        - "Subscription"
      summary: reactivate subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/reactivateSubscriptionResponse"

  /"merchant_defined_url":
    post:
      tags:
        - "Subscription"
      summary: Payment data posted to merchant on successful payment.
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/subscription"
      responses:
        "200":
          description: ok# status code

  /merchants/{merchantId}/checkout:
    post:
      tags:
        - "Single Payment Generic Checkout"
      summary: Initiate a generic single payment
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createCheckout"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singlePaymentInitiateResponse"

  /"merchant_url":
    post:
      tags:
        - "Single Payment Product"
      summary: Payment data posted to merchant on successful payment.
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/singlePayment"
      responses:
        "200":
          description: ok

  /merchants/{merchantId}/singlePaymentProducts/{productId}/initiate:
    post:
      tags:
        - "Single Payment Product"
      summary: Initiate a single payment on a product defined in the portal
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the single payment product
          required: true

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/initiateSinglePayment"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singlePaymentInitiateResponse"

  /"webhook_url":
    post:
      tags:
        - "Single Payment Generic Checkout"
      summary: Payment data posted to merchant on successful payment.
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/checkoutWebhook"
      responses:
        "200":
          description: ok

  /merchants/{id}/createBookingManifest:
    post:
      summary: Create a Booking Manifest
      operationId: createBookingManifest
      tags:
        - Booking
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingManifestRequest"
            examples:
              exampleRequest:
                value:
                  id: "123"
                  name: "Summer Festival"
                  description: "Annual summer music festival"
                  vat: 0.25
                  capacity: 500
                  maxOrderSize: 10
                  type: "event"
                  generateDaysAhead: 30
                  price: 50.00
                  paymentType:
                    - "STRIPE"
                  supportDiscountCode: true
                  startDate: "2024-06-15"
                  resourceNames:
                    - "Stage 1"
                    - "Stage 2"
                  receiptNames:
                    - "Ticket"
                    - "VIP Pass"
                  refundType: "50-percent-money-or-100-percent-giftcard"
                  closedDates:
                    - "2024-07-01"
                    - "2024-07-02"
                  emailDetails: "info@summerfestival.com"
                  endDate: "2024-06-20"
                  termsAndConditionsUrl: "https://summerfestival.com/terms"
                  publishNightly: false
                  enabled: true
                  contactPhoneNumber: "+1234567890"
                  mapsUrl: "https://maps.google.com/?q=summer+festival"
                  mapsDescription: "Festival Location"
                  infoLink: "https://summerfestival.com/info"
                  length: 480
                  isFullDay: false
                  schedule:
                    - startTimes:
                        - hour: 14
                          minute: 30
                          length: 60
                          customCapacity: 200
                          priceAdjustments: 10
                          customLength: 120# <P
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /merchants/{id}/updateBookingManifest/{productId}:
    put:
      summary: Update a Booking Manifest
      operationId: updateBookingManifest
      tags:
        - Booking
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingManifestRequest"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

components:
  schemas:
    genericPurchaseItem:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        amount:
          type: integer
        vat:
          type: string
        numberOfItems:
          type: integer
    checkoutWebhook:
      type: object
      properties:
        paymentId:
          type: string
        amount:
          type: integer
        merchantCustomerId:
          type: string
        status:
          type: string
          enum: [PAID]
        buyerEmail:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/genericPurchaseItem"
    createCheckout:
      type: object
      properties:
        merchantCustomerId:
          type: string
        type:
          type: string
          enum: [genericPurchase]
        items:
          type: array
          items:
            $ref: "#/components/schemas/genericPurchaseItem"
        paymentName:
          type: string
        paymentDescription:
          type: string
        buyerEmail:
          type: string
        webhookUrl:
          type: string
        successRedirectUrl:
          type: string

    firstChargePriceOverride:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
          vat:
            type: string
          amount:
            type: integer
    stopSubscriptionResponse:
      type: string
    reactivateSubscriptionResponse:
      type: string
    updateSubscriptionResponse:
     oneOf:
      - type: object
        properties:
          redirectUrl:
            type: string
      - $ref: '#/components/schemas/subscription'

    updateProductRequest:
      type: object
      properties:
        price:
          type: number
        productDescription:
          type: string
        extraInfo:
          type: string
          nullable: true
        productName:
          type: string
    createProductRequest:
      type: object
      properties:
        interval:
          type: string
          enum: ["MONTH", "YEAR"]
        intervalCount:
          type: integer
        price:
          type: number
        mva:
          type: string
          enum: ["0%", "5%", "12%", "15%", "25%"]
          nullable: true
        sendReciept:
          type: boolean
          nullable: true
        firstChargePrice:
          type: number
          nullable: true
        productDescription:
          type: string
        extraInfo:
          type: string
          nullable: true
        productName:
          type: string
        anchorDate:
          type: number
          nullable: true
        anchorMonth:
          type: number
          nullable: true
        cancelledLink:
          type: string
          nullable: true
        createdSuccessLink:
          type: string
          nullable: true
        paymentWebhookUrl:
          type: string
          nullable: true
        supportedPaymentMethods:
          type: array
          items:
            type: string
            enum: [VIPPS, STRIPE]
          nullable: true
        commitmentMonths:
          type: number
          nullable: true
        createDraftSubscription:
          type: object
          properties:
            paymentMethodType:
              type: string
              enum: [VIPPS, STRIPE]
            merchantCustomerId:
              type: string
            signupRedirectUrl:
              type: string
            email:
              type: string

      required:
        - interval
        - intervalCount
        - price
        - productDescription
        - productName
      example:
        interval: MONTH
        intervalCount: 1
        price: 29900
        mva: "25%"
        sendReciept: true
        firstChargePrice: 19900
        productDescription: membership in the best sauna in town
        extraInfo: "Includes: 1 Membership; 2 towels; and a magazine sent to the frontdoor"
        productName: Sauna membership
        paymentWebhookUrl: https://mysite.com/periode/wevhook
        supportedPaymentMethods: [VIPPS]
        createDraftSubscription:
          paymentMethodType: VIPPS
          merchantCustomerId: mysite_customer_id
          signupRedirectUrl: https://mysite.com/payment-callback
          email: "aksel@periode.no"

    createProductResponse:
      type: object
      properties:
        id:
          type: string
        draftSubscription:
          $ref: "#/components/schemas/createSubscriptionResponse"
      required:
        - id

    createSubscriptionResponse:
      type: object
      properties:
        redirectUrl:
          type: string
        subscriptionId:
          type: string
        invoiceId:
          type: string

    createSubscription:
      type: object
      properties:
        email:
          type: string
        checkedExtraFields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              numberOfItems:
                type: number
        checkedRadioButton:
          type: string
        paymentMethodType:
          type: string
          enum: [VIPPS, STRIPE]
        merchantCustomerId:
          type: string
        signupRedirectUrl:
          type: string
        firstChargePriceOverride:
          $ref: "#/components/schemas/firstChargePriceOverride"
        discountCode:
          type: string
        discount:
          type: object
          properties:
            type:
              type: string
              enum: [percentage, flatAmount]
            amount: 
              type: integer
            expireDate:
              type: string
            scope:
              type: string
              enum: [baseProduct, baseAndExtraFields]

    updateSubscription:
      type: object
      properties:
        redirectUri:
          type: string
        checkedExtraFields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              numberOfItems:
                type: number
        checkedRadioButton:
          type: string
        updateTime:
          type: string
          enum: [NOW, NEXT_PAYMENT_DATE]
        discount:
          type: object
          properties:
            type:
              type: string
              enum: [percentage, flatAmount]
            amount: 
              type: integer
            expireDate:
              type: string
            scope:
              type: string
              enum: [baseProduct, baseAndExtraFields]

    subscription:
      type: object
      properties:
        subscriptionId:
          type: string
        productName:
          type: string
        productId:
          type: string
        productDecription:
          type: string
        merchantCustomerId:
          type: string
        periodeCustomerId:
          type: string
        expireDate:
          type: string
        nextWebhookDate:
          type: string
        nextChargeDate:
          type: string
        subscriptionStatus:
          type: string
          enum: [ACTIVE, STOPPED]
        tags:
          type: object
        discount:
          type: object
          properties:
            type:
              type: string
              enum: [percentage, flatAmount]
            amount: 
              type: integer
            expireDate:
              type: string
            scope:
              type: string
              enum: [baseProduct, baseAndExtraFields]
        customer:
          type: object
          properties:
            givenName:
              type: string
            familyName:
              type: string
            name:
              type: string
            phone:
              type: string
            email:
              type: string
            address:
              type: object
              properties:
                region:
                  type: string
                postalCode:
                  type: string
                street:
                  type: string
        activeItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              amount:
                type: integer
              type:
                type: string
                enum:
                  [checkbox, radioButton, baseItem, firstChargePriceOverride]
                  
        nextChargeItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              amount:
                type: integer
              type:
                type: string
                enum:
                  [checkbox, radioButton, baseItem, firstChargePriceOverride]

        chargeLog:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    description:
                      type: string
                    totalAmount:
                      type: integer

                    firstChargePriceOverride:
                      $ref: "#/components/schemas/firstChargePriceOverride"
                    type:
                      type: string
                      enum: [checkbox, radioButton, baseItem]

              charge:
                type: object
                properties:
                  paymentType:
                    type: string
                    enum: [VIPPS, STRIPE]
                  chargeType:
                    type: string
                    enum: [Recurring, extraCharge]
                  chargeId:
                    type: string
                  paymentIntentId:
                    type: string
                  amount:
                    type: integer
                  chargeDate:
                    type: string
                  isInitialCharge:
                    type: boolean
                  currency:
                    type: string
                    enum: [NOK]
                  refundedAmount:
                    type: integer
                  failureReason:
                    type: string
                  failureDecription:
                    type: string
                  status:
                    type: string
                    enum:
                      [
                        CHARGED,
                        REFUNDEND,
                        FAILED. CANCELLED,
                        PARTIALLY_REFUNDED,
                      ]
      example:
        productName: Naf
        productId: 123XDGDF
        productDescription: Naf sykkelregister
        merchantCustomerId: some_naf_id
        expireDate: 2023-10-02
        periodeCustomerId: DSFCSDF112
        subscriptionStatus: ACTIVE
        subscriptionId: ASDADS
        tags:
          customTag: 123
          ourPaymentRef: 123
        customer:
          name: Aksel Stadler
          givenName: Aksel
          familyName: Stadler
          phone: 4147377
          email: aksels@stadler.no
          address:
            city: oslo
            postalcode: 0650
            street: jens bjelkes gate 6

        activeItems:
          [
            {
              type: baseItem,
              firstChargePriceOverride:
                [
                  {
                    amount: 10000,
                    description:: "Base subscription product",
                    vat: "10",
                  },
                  {
                    amount: 20000,
                    description: "Vitamine C capsule",
                    vat: "25",
                  },
                ],
              description: naf sykkel base,
              amount: 29900,
              id: invoice.manifest.id,
            },
            {
              type: checkbox,
              description: naf veihjelp,
              amount: 59900,
              id: dsfdsf,
            },
            {
              type: radioButton,
              id: 1213213,
              description: 8 bikes,
              amount: 9900,
            },
            { type: "firstChargePriceOverride", amount: 3000 },
          ]
        chargeLog:
          [
            {
              items:
                [
                  {
                    type: baseItem,
                    description: naf sykkel base,
                    amount: 29900,
                    id: invoice.manifest.id,
                  },
                  {
                    type: checkbox,
                    description: naf veihjelp,
                    amount: 59900,
                    id: dsfdsf,
                  },
                  {
                    type: radioButton,
                    id: 1213213,
                    description: 8 bikes,
                    amount: 9900,
                  },
                ],
              id: 233FD,
              charge:
                {
                  type: VIPPS,
                  chargeType: Recurring,
                  chargeDate: "2022-05-15",
                  isInitialCharge: true,
                  status: CHARGED,
                  currency: NOK,
                  totalAmount: 87000,
                },
            },
          ]
    initiateSinglePayment:
      type: object
      properties:
        merchantCustomerId:
          type: string
        buyerEmail:
          type: string
    singlePaymentInitiateResponse:
      type: object
      properties:
        paymentUrl:
          type: string
        paymentId:
          type: string
    singlePayment:
      type: object
      properties:
        productId:
          type: string
        amount:
          type: integer
        merchantCustomerId:
          type: string
        paymentId:
          type: string
        status:
          type: string
        buyerEmail:
          type: string
        successRedirectUrl:
          type: string
    BookingManifestRequest:
      type: object
      example:
      required:
        - name
        - description
        - vat
        - capacity
        - maxOrderSize
        - type
        - generateDaysAhead
        - price
        - paymentType
        - supportDiscountCode
        - startDate
        - resourceNames
        - receiptNames
        - refundType
        - closedDates
        - emailDetails
        - termsAndConditionsUrl
        - publishNightly
        - enabled
        - contactPhoneNumber
        - mapsUrl
        - mapsDescription
        - infoLink
        - length
        - isFullDay
        - schedule
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        vat:
          type: number
          minimum: 0.0
          maximum: 1.0
        capacity:
          type: number
          format: int32
        maxOrderSize:
          type: number
          format: int32
        type:
          type: string
          enum: [event, recurring, ticket, open-event]
        generateDaysAhead:
          type: number
          format: int32
        price:
          type: number
        paymentType:
          type: array
          items:
            type: string
            enum: [VIPPS, STRIPE]
        supportDiscountCode:
          type: boolean
        startDate:
          type: string
        resourceNames:
          type: array
          items:
            type: string
          minItems: 2
          maxItems: 2
        receiptNames:
          type: array
          items:
            type: string
          minItems: 2
          maxItems: 2
        refundType:
          type: string
          enum:
            [
              money,
              only-giftCard,
              50-percent-money-or-100-percent-giftcard,
              none,
            ]
        closedDates:
          type: array
          items:
            type: string
            maxLength: 10
        emailDetails:
          type: string
        endDate:
          type: string
        termsAndConditionsUrl:
          type: string
        publishNightly:
          type: boolean
        enabled:
          type: boolean
        contactPhoneNumber:
          type: string
        mapsUrl:
          type: string
        mapsDescription:
          type: string
        infoLink:
          type: string
        length:
          type: number
        isFullDay:
          type: boolean
        schedule:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleItem"
          minItems: 7
          maxItems: 7

    ScheduleItem:
      type: object
      required:
        - startTimes
      properties:
        startTimes:
          type: array
          items:
            $ref: "#/components/schemas/StartTime"

    StartTime:
      type: object
      required:
        - hour
        - minute
        - length
      properties:
        hour:
          type: number
          format: int32
          minimum: 0
        minute:
          type: number
          format: int32
          minimum: 0
        length:
          type: number
          minimum: 0
        customCapacity:
          type: number
        priceAdjustments:
          type: number
        customLength:
          type: number
