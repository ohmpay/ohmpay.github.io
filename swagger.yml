openapi: 3.0.3
info:
  title: Periode Api
  description: > 
    The API for customers who want create their own UI, but still use Period as a payment machine.
    The poeple wanting to integrate with this API are called merchants in this text
    </br>
    </br>

    <b> Prerequisites: </b> 
    </br>
      1. Sign up at periode.no  https://periode.no/bli-kunde     </br>
      2. Merchant creates a product in periodes UI portal and receives their unique periode url for initiating a purchase.  (minside.periode.no/signup/{productId})
      </br>
        a. (Optional) Add a webhook url to the product so all payments and state changes are POSTED to your server 
        </br>
        </br>
      3. Retrieve your shared secret used in the x-api-key for all requests at the "instillinger" settings in merchant.periode.no
    
    <b>
     I will let Periode manage the UI for letting users signup and stop the agreement: (E.g. users can log into periode) </b>
    </br>

      3. Merchant creates a purchase flow and redirects minside.periode.no/{productId} .     </br>

         a. Without query params the customer will fill in requierd information in Periodes UI     </br>

         b. If the customer wants to own the UI the customer can be redirected with all requierd info as query params  </br>
      4. Customer is redirected to Vipps or Stripe for payment     </br>

      5. On success Periode sends a POST call to merchant defined endpoint.     </br>

      6. Merchant returns 200 OK, on which periode redirects the customer to the merchants site     </br>

      7. Optional. Merchant polls /subscriptions endpoint to ensure all charges are accounted for (in case of donwtime during webhook calls)     </br>

      8. End User can login to minside.periode.no to manage their subscription </br>

    <b>
    I have created my own UI and will only use the Periode API to initiate and stop subscriptions. 
    </b>
    </br>

      3. Merchant initiates a subscription by posting to /merchant/:merchantId/products/:productId/subscriptions

      4. Periode responds with a vipps payment url that the merchant will redirect  the user to

      5. After successfull payment the users is redirected back to us, we send a webhook to you and
      redirect the user to your site when you respond 200OK
      
    <b>
    <a href="https://github.com/ohmpay/ohmpay.github.io/blob/main/merchantApi.postman_collection.json">
    Postman Collection </a>
    </b>
    
    >
    
    


     
  version: 0.0.1
servers:
  - url: https://europe-west1-periode-prod.cloudfunctions.net/merchantApi
    description: The url of the merchant exposed part of periode
  - url: https://europe-west1-periode-test.cloudfunctions.net/merchantApi
    description: The url of the merchant exposed part of periode

paths:
  /minside.periode.no/signup/{productId}:
    get:
      tags:
        - "Subscription"
      summary: Get the signup page for the product
      parameters:
        - in: path
          name: productId
          schema:
                type: string
          required: true

          description: The unique id of this product
        - in: query
          name: merchant_customer_id
          schema:
            type: string
          description: The id you have for the customer in your system (deprecated, use tags instead)
        - in: query
          name: redirect_uri
          schema:
            type: string
          description: the uri you want the customer to redirect to after completed payment
        - in: query
          name: webhook_uri
          schema:
            type: string 
          description: url encoded uri where you want to receive the backend to backend webhook on subscription state changes
        - in: query
          name: email
          schema:
            type: string
          description: The email you have for the customer in your system
        - in: query
          name: radio_button_index
          schema:
            type: integer
          description: The index of the checked radio button, where 0 is the first
        - in: query
          name: checkbox_indexes
          schema:
            type: string
          description: The indexes of the checked checboxes, separatet by comma
        - in: query
          name: payment_method_type
          schema:
            type: string
            enum: [VIPPS, STRIPE]
          description: The payment method to use
        - in: query
          name: auto_submit
          schema:
            type: boolean
          description: Whether periode should redirect the customer directly to stripe/vipps for payments 
        - in: query
          name: tag_*
          schema:
            type: string
          description: Any number of custom tags you want to have on the subscription on the form tag_name=value

      responses:
        '200':
          description: Successful response
  
  /merchants/{merchantId}/products/{productId}/subscriptions/:
    get:
      tags:
        - "Subscription"
      summary: Get all subscriptions for this merchant
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system

        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true
          
        - in: path
          name: productId
          schema:
            type: string
          description: The id of the merchant
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/subscription'

  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}:
    get:
      tags:
        - "Subscription"
      summary: Get a single subscription by id
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
        
        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true
      
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscription'


  /merchants/{merchantId}/products/{productId}/subscriptions:
    post:
      tags:
        - "Subscription"
      summary: Create a draft subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
        
        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSubscriptionResponse'
                

  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}/update:
    put:
      tags:
        - "Subscription"
      summary: Update subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
        
        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateSubscription'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateSubscriptionResponse'
                
  /merchants/{merchantId}/products/{productId}/subscriptions/{subscriptionId}/stop:
    put:
      tags:
        - "Subscription"
      summary: stop subscription
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
        
        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the subscription
          required: true

        - in: path
          name: subscriptionId
          schema:
            type: string
          description: The id of the subscription
          required: true

     
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stopSubscriptionResponse'
       
  /"merchant_defined_url":
    post:
      tags:
        - "Subscription"
      summary: Payment data posted to merchant on successful payment.
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscription'
      responses:
        '200':
          description:  ok# status code
          
  /merchants/{merchantId}/singlePaymentProducts/{productId}/initiate:
    post:
      tags:
        - "Single Payment"
      summary: Initiate a single payment
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
        
        - in: path
          name: merchantId
          schema:
            type: string
          description: The id of the merchant
          required: true

        - in: path
          name: productId
          schema:
            type: string
          description: The id of the single payment product
          required: true
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initiateSinglePayment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/singlePaymentInitiateResponse'
                
  /"merchant_url":
    post:
      tags:
        - "Single Payment"
      summary: Payment data posted to merchant on successful payment.
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          required: true      
          description: The shared secret between the merchant and periode. Be sure to validate this else a malicious actor can post payments into your system
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/singlePayment'
      responses:
        '200':
          description:  ok
          

components:
  schemas:
    stopSubscriptionResponse:
      type: string
    updateSubscriptionResponse:
      type: object
      properties:
        redirectUrl: 
          type: string
  
    createSubscriptionResponse:
      type: object
      properties:
        redirectUrl: 
          type: string
        subscriptionId: 
          type: string
        invoiceId: 
          type: string
            
    createSubscription:
      type: object
      properties:
        amount: 
          type: number
        email:
          type: string
        checkedExtraFields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              numberOfItems:
                type: number
        checkedRadioButton:
          type: string
        paymentMethodType:
          type: string
          enum: [VIPPS, STRIPE]
        merchantCustomerId:
          type: string
        signupRedirectUrl:
          type: string
          
    updateSubscription:
      type: object
      properties:
        redirectUri: 
          type: string
        checkedExtraFields:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              numberOfItems:
                type: number
        checkedRadioButton:
          type: string
        updateTime:
          type: string
          enum: [NOw, NEXT_PAYMENT_DATE]
          
    subscription:
      type: object
      properties:
        subscriptionId:
          type: string
        productName:
          type: string
        productId:
          type: string
        productDecription:
          type: string
        merchantCustomerId:
          type: string
        periodeCustomerId:
          type: string
        expireDate:
          type: string
        subscriptionStatus:
          type: string
          enum: [ACTIVE, STOPPED]
        tags:
          type: object
        customer:
          type: object
          properties:
            givenName: 
              type: string
            familyName: 
              type: string
            name:
              type: string
            phone:
              type: string
            email:
              type: string
            address:
              type: object
              properties:
                region:
                  type: string
                postalCode:
                  type: string
                street:
                  type: string
        activeItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              description:
                type: string
              amount:
                type: integer
              type:
                type: string
                enum: [checkbox, radioButton, baseItem, firstChargePriceOverride]
              
              firstChargePriceOverrideData:
                type: array
                items:
                  type: object
                  properties:
                    description: 
                      type: string
                    vat: 
                      type: string
                    amount: 
                      type: integer
                  


              

        
        chargeLog:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    description:
                      type: string
                    amount:
                      type: integer
                    type:
                      type: string
                      enum: [checkbox, radioButton, baseItem]
                
              charge:
                type: object
                properties:
                  paymentType:
                    type: string
                    enum: [VIPPS, STRIPE]
                  chargeType:
                    type: string
                    enum: [Recurring, extraCharge]
                  chargeId: 
                    type: string
                  paymentIntentId:
                    type: string
                  amount:
                    type: integer
                  chargeDate:
                    type: string
                  isInitialCharge:
                    type: boolean
                  currency:
                    type: string
                    enum: [NOK]
                  refundedAmount:
                    type: integer
                  failureReason:
                    type: string
                  failureDecription:
                    type: string
                  status:
                    type: string
                    enum: [CHARGED, REFUNDEND, FAILED. CANCELLED, PARTIALLY_REFUNDED]
      example:
        productName: Naf
        productId: 123XDGDF
        productDescription: Naf sykkelregister
        merchantCustomerId: some_naf_id
        expireDate: 2023-10-02
        periodeCustomerId: DSFCSDF112
        subscriptionStatus: ACTIVE
        subscriptionId: ASDADS
        tags:
          customTag: 123
          ourPaymentRef: 123
        customer:
          name: Aksel Stadler
          givenName: Aksel
          familyName: Stadler
          phone: 4147377
          email: aksels@stadler.no
          address:
            city: oslo
            postalcode: 0650
            street: jens bjelkes gate 6
        
        activeItems:
          [{type: baseItem, description: naf sykkel base, amount: 29900, id: invoice.manifest.id}, {type: checkbox, description: naf veihjelp, amount: 59900, id: dsfdsf}, {type: radioButton, id: 1213213, description: 8 bikes, amount: 9900}, {type: "firstChargePriceOverride", amount: 3000, firstChargePriceOverrideData: [{amount: 10000, description:: "Base subscription product", vat: "10"},{amount: 20000, description: "Vitamine C capsule", vat: "25"}]}]
        chargeLog: [{
          items: [{type: baseItem, description: naf sykkel base, amount: 29900, id: invoice.manifest.id}, {type: checkbox, description: naf veihjelp, amount: 59900, id: dsfdsf}, {type: radioButton, id: 1213213, description: 8 bikes, amount: 9900}],
          id: 233FD,
          charge:  {type: VIPPS, 
            chargeType: Recurring,
            chargeDate: "2022-05-15", isInitialCharge: true, status: CHARGED, currency: NOK, totalAmount: 87000
          }
          }]
    initiateSinglePayment: 
      type: object
      properties:
        merchantCustomerId:
          type: string
        buyerEmail:
          type: string
    singlePaymentInitiateResponse:
      type: object
      properties:
        paymentUrl: 
          type: string  
    singlePayment:
      type: object 
      properties:
        productId:
          type: string
        merchantCustomerId:
          type: string
        paymentId: 
          type: string
        status: 
          type: string
        buyerEmail:
          type: string

      
